bool processParallel False
#bool avoidUser True
bool processQvsT False
#bool maxMinAvoided False
bool cleanModeLatex False
bool forceProcess  True #even if results file exist it proceess the results, otherwise it checks if it exists
bool setPrintDataForGle True
bool forceHourlyYear False # to be used for multi year simulations
bool footerPresent True # to be used if run ended with error, but simulation should still be processed until end of run 
bool calculateEPF True

#########
int yearReadedInMonthlyFile -1 #-1
int firstMonthUsed 6     # 0=January 1=February 6=July 7=August
string firstMonth "July"   
int reduceCpu 0
int numberOfYearsInHourlyFile 14 #20


#########
string typeOfProcess "completeFolder" #"completeFolder"  "casesDefined"
string typeOfSimulation "ashpDhwSh"


string pathBase "C:\GIT\pytrnsys_gui\data\examples\PvAshpDhwShMfh\pytrnsysRun"

## Source files
string latexNames ".\latexNames.json"

#string matplotlibStyle "seaborn"


## Values for cost calculation
calc Q_SH = PheatBui_kW_Tot
calc Q_DHW = Pdhw_kW_Tot
calc Q_yearly = Pdhw_kW_Tot + PheatBui_kW_Tot
calc E_yearly = elSysIn_Q_HpCompD_Tot
calc Net_E_tot = elSysIn_Grid_Tot - elSysOut_PvToGrid_Tot
calc PV_tot = elSysIn_PV_Tot



calc E_invLoss = elSysOut_InvLoss_Tot

calc E_sys_tot = elSysOut_PuShDemand_Tot + elSysOut_CtrlDemand_Tot + elSysIn_Q_TesDhwAux_Tot + elSysIn_Q_TesShAux_Tot + elSysIn_Q_HpCompD_Tot + elSysOut_InvLoss_Tot



calc EPF_tot = (E_sys_tot + elSysOut_HHDemand_Tot)/(elSysIn_PV_Tot + elSysIn_Grid_Tot - elSysOut_PvToGrid_Tot )
#calc R_net = Net_E_tot/(E_sys_tot + elSysOut_HHDemand_Tot) #old definition for R_net based on EU_PVSEC Paper Schmidli et al. 2020, should no longer be used
calc R_net_tot = elSysIn_Grid_Tot/(PheatBui_kW_Tot + Pdhw_kW_Tot + elSysOut_HHDemand_Tot) #new definition of R_net: Netzaufwandszahl (English translation?)
calc R_suff = (E_sys_tot + elSysOut_HHDemand_Tot - elSysIn_Grid_Tot)/(E_sys_tot + elSysOut_HHDemand_Tot)
# calc It_mean_Wm2 = IT_H_kW_Tot/8.76



calc El_tot = E_sys_tot + elSysOut_HHDemand_Tot

calc E_nutz = PheatBui_kW_Tot + Pdhw_kW_Tot + elSysOut_HHDemand_Tot + qSysIn_BuiDemand_Tot


## Hourly calculations
calcHourly elSysIn_heating = -elSysOut_CtrlDemand + PelAuxComp_kW


## Monthly Calculations
calcMonthly Net_E = elSysIn_Grid - elSysOut_PvToGrid
calcMonthly R_net = elSysIn_Grid/(PheatBui_kW + Pdhw_kW + elSysOut_HHDemand)
#calcMonthly fSolar = qSysIn_Collector/(Pdhw_kW+PheatBui_kW+qSysOut_CiLoss+qSysOut_CiBuiSH)
calcMonthly P_tot = Pdhw_kW+PheatBui_kW







# Additional content of the pdf
stringArray caseDefinition "Vol_Tes1" "Vol_Tes2" "sizeHpUsed" "numModPvRoof" "PV_tot" "Net_E_tot" "PowerPeakPV_kWp" "EPF_tot"  "R_net_tot"  "R_suff"
stringArray addImage "C:\Daten\GIT\SolTherm2050Ddck\Hydraulics\SASHP+2Tes.pdf"
stringArray plotT "Troom" "Tamb"

#stringArray plotMonthly "fSolarMonth"
#stringArray plotMonthly "renShareMonthly"
#stringArray plotMonthly "PColl_kWm2"

# comparisons



# stringArray compareMonthlyBarsPlot "IT_H_KW" "Name"
# stringArray compareMonthlyBarsPlot "Tamb_avg" "Name"
# stringArray compareMonthlyBarsPlot "PheatBui_kW" "Name"
#stringArray compareMonthlyBarsPlot "qSysIn_Collector" "Name"
#stringArray compareMonthlyBarsPlot "fSolar" "Name"
# stringArray compareMonthlyBarsPlot "R_net" "Name"


## Result file
# stringArray results "E_invLoss" "El_tot" "E_nutz" "PowerPeakPV_kWp" "PheatBui_kW"  "PheatBui_kW_Tot" "Pdhw_kW_Tot" "Vol_Tes1"  "Q_SH"  "Q_DHW"  "Q_yearly"  "E_yearly"  "sizeHpUsed" "yearSpfShpDis" "numModPvRoof" "Net_E_tot" "PV_tot" "R_net" "R_net_tot" "EPF_tot" "R_suff" "E_sys_tot" "elSysOut_HHDemand_Tot" "elSysOut_PvToGrid_Tot" "elSysIn_PV_Tot" "elSysIn_Grid_Tot"# values to be printed to json
stringArray results "E_invLoss" "El_tot" "E_nutz" "PowerPeakPV_kWp" "PheatBui_kW"  "Pdhw_kW_Tot" "Vol_Tes1"  "Q_SH"  "Q_DHW"  "Q_yearly"  "E_yearly"  "sizeHpUsed" "yearSpfShpDis" "numModPvRoof" "Net_E_tot" "PV_tot" "R_net" "R_net_tot" "EPF_tot" "R_suff" "E_sys_tot" "elSysOut_HHDemand_Tot" "elSysOut_PvToGrid_Tot" "elSysIn_PV_Tot" "elSysIn_Grid_Tot"# values to be printed to json

## Plots to be generated
#stringArray plotT "Troom"
# stringArray plotHourlyQvsT "Pdhw_kW"  "Tdhw" "Pcoll_kW" "TCollOut" "PRdIn_KW"  "TRdFl" "PRdIn_KW" "TrdRt" "PauxCond_kW" "THpCondIn"
# stringArray plotHourly "Troom" "PRdIn_KW" "Pcoll_kW" "Pdhw_kW" "TCollIn" "TCollOut"  # values to be plotted (hourly)
stringArray plotHourly "Troom" "PRdIn_KW" "Pdhw_kW" "elSysIn_heating" "elSysIn_Grid" "elSysOut_PvToGrid" "elSysOut_HHDemand"  "elSysOut_InvLoss" "elSysIn_PV"# values to be plotted (hourly)




