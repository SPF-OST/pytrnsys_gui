**************************************
**BEGIN type56.ddck (TRNSYS-model)
**************************************

*********************************************************************
** Contact person : Daniel Carbonell
** Creation date  : 30.09.2016
** Last changes   : 28.04.2020, MB
**                  10.24 DC udpates for defaultVisibility "local"
*********************************************************************

*******************************************************************************************************
** Description: Building demands using the type 56 multi-zone model from TRNSYS.
** Source: SPF ddck for Type56
** This ddck needs the data from sfh45.ddck or alike and both files should be placed in the same folder
** Otherwise the names used here will not be found
*******************************************************************************************************


***********************************
** inputs from hydraulic solver
***********************************
** None
***********************************
** outputs to hydraulic solver
***********************************
** None

***********************************
** inputs from other ddck
***********************************


******************************************************************************************
** outputs to energy balance in kWh
******************************************************************************************
EQUATIONS 1
@energy(out, el, penaltySH) = PpenSH_kW

***********************************
** inputs from other ddck
***********************************

EQUATIONS #
IT_H   = $weather_IT_H
IT_N   = $weather_IT_N
IT_W   = $weather_IT_W
IT_E   = $weather_IT_E
IT_S   = $weather_IT_S
vWind  = $weather_vWind
Tamb   = $weather_Tamb
Tamb24 = $type888_tAmb24 !average temperature over a period (It can the average over 24, 48 or 96 h that define the heating season on/off)
RHamb_100 = $weather_RHamb_100
Tsky      = $weather_Tsky
AISZ      = $weather_AISZ
AISA      = $weather_AISA
IT_surfUser_1 = $weather_IT_surfUser_1 !IT_S60
IT_surfUser_3 = $weather_IT_surfUser_3 !IT_N20
IB_N    = $weather_IB_N
IB_S    = $weather_IB_S
IB_E    = $weather_IB_E
IB_W    = $weather_IB_W
IB_surfUser_1 = $weather_IB_surfUser_1 !IB_S60
IB_surfUser_3 = $weather_IB_surfUser_3 !IB_N20
AI_N   = $weather_AI_N
AI_S   = $weather_AI_S
AI_E   = $weather_AI_E
AI_W   = $weather_AI_W
AI_surfUser_1 = $weather_AI_surfUser_1 !AI_S60
AI_surfUser_3 = $weather_AI_surfUser_3 !AI_N20


Vbui    = $bui_Vbui
UaBui   = $bui_UaBui
AreaBui = $bui_AreaBui

time       = $Time

!PheatBuiRad_Jh  = $heatDisSys_PheatBuiRad_kJh/1000.
!PheatBuiConv_Jh = $heatDisSys_PheatBuiConv_kJh/1000.
!PbuiGainEq_Jh   = $intGains_PbuiIntGain_kJh/1000.
!PBuiGrd_Jh      = $type985_PBuiGrd_kJh/1000.
PheatBuiRad_Jh  = $heatDisSys_PheatBuiRad_kJh
PheatBuiConv_Jh = $heatDisSys_PheatBuiConv_kJh
PbuiGainEq_Jh   = $intGains_PbuiIntGain_kJh
PBuiGrd_Jh      = $type985_PBuiGrd_kJh

Npers           = $intGains_Npers

***********************************
** outputs to other ddck
***********************************

EQUATIONS #
$buiModel_Troom     = TRoom
$buiModel_TroomStar = TRoomStar

CONSTANTS #
TIdCoolSet = 100
TIdHeatSet = 0     


UNIT 32 TYPE 2     ! Building Shading Controller: Radiation
PARAMETERS 2     
5     ! 1 No. of oscillations
5000     ! 2 High limit cut-out
INPUTS 6     
IT_H           ! Radiation:IT_H ->Upper input value
0,0            ! Lower input value
0,0            ! Monitoring value
shadingControlR          ! Output control function ->Input control function
0,0            ! Upper dead band
0,0            ! Lower dead band
*** INITIAL INPUT VALUES     
15 0 0 0 1080.0 720.0     
!        300 W/m� a. 200 W/m�
!      37500 lux  a. 25000 lux
!  ->  daylight fraction of lighting ~2%
!        750 lux  a. 500 lux
EQUATIONS 1
shadingControlR=[32,1] !Changed automatically

UNIT 49 TYPE 2     ! Building Shading Controller: Temperature
PARAMETERS 2     
5     ! 1 No. of oscillations
95     ! 2 High limit cut-out
INPUTS 6     
Troom    		! Building:    1- (air temperature of zone)  TAIR   1 ->Upper input value
0,0           	! Lower input value
0,0           	! Monitoring value
shadingControlT	! Output control function ->Input control function
0,0           	! Upper dead band
0,0           	! Lower dead band
*** INITIAL INPUT VALUES     
20 0 0 0 23.8 22.8      

EQUATIONS 1
shadingControlT=[49,1] !Changed automatically

     
UNIT 34 TYPE 14     ! Type14h: Shading Fraction Value [%] Results im percent from program "PARASOL", 45� gray venetian blind, Z�rich
PARAMETERS 26     
0     ! 1 Initial value of time
11.3     ! 2 Initial value of function
730 13.2  1460  17.2  2190  23.8  2920  28.0     
3650  29.8  4380  28.7  5110  24.7  5840  19.0     
6570  14.8  7300  14.7  8030  12.3  8760  11.3     
*       
EQUATIONS 1     ! Variable Shading
i_SHD = [49,1]*[32,1]*((100.0-[34,1])/100.0)

UNIT 37 TYPE 91  ! Air to air heat exchanger of building ventilation
PARAMETERS 3     
0.6     ! 1 HX effectiveness / ATMOS 175DC (www.paul-lueftung.de) 88% (orig) - changed to nes. 70% 
1.0048     ! 2 Specific heat of hot side fluid - air
1.0048     ! 3 Specific heat of cold side fluid - air
INPUTS 4     
Troom        ! Hot side inlet temperature
MfrHxBuiAir  ! Hot side flow rate
Tamb         ! Cold side inlet temperature
MfrHxBuiAir  ! Cold side flow rate
*** INITIAL INPUT VALUES     
20.0 141.6 20.0 141.6      
     
EQUATIONS 4     ! air exchange between building and ambient
i_vent = 0 ! LT(Nbui,1.5)*0.4     
MfrHxBuiAir = i_vent*Vbui                                          ! relative air mass flow rate for the SFH, -
BoHRSOn = LE(Tamb24,12)     ! mass flow rate of the building ventilation (passive or active), kg/h
T_HRSi = BoHRSOn*[37,3]+NOT(BoHRSOn)*Tamb     ! temperature of the air entering the building, depending on heat recovery system (HRS) on or off, �C
     
UNIT 38 TYPE 2     ! Temperature Building Ventilation: if summer and night and troom > 24�C - higher vent.
PARAMETERS 2     
5     ! 1 No. of oscillations
95     ! 2 High limit cut-out
INPUTS 6     
Troom     ! Building room temp. �C
0,0            ! Lower input value
0,0            ! Monitoring value
BoWinTilt2          ! Output control function ->Input control function
0,0            ! Upper dead band
0,0            ! Lower dead band
*** INITIAL INPUT VALUES     
20 0 0 0 24 23      
     
EQUATIONS 2     
BoWinTilt1 = NOT(GT(24*(time/24-int(time/24)),8)*LT(24*(time/24-int(time/24)),21))     ! Boolean indicating if time is between 9 p.m. and 8 a.m.)
BoWinTilt2 = [38,1]     ! Boolean indicating room temp. above 24 / 1 K hysteresis (off below 23)
     
UNIT 39 TYPE 2     ! Building Window Infiltration Controller
PARAMETERS 2     
5     ! 1 No. of oscillations
50     ! 2 High limit cut-out
INPUTS 6     
Troom     !  T_room    -> Upper input value
Tamb     !  T_ambient -> Lower input value
0,0          !  Monitoring value
BoWinTilt3        !  Output control function ->Input control function
0,0          !  Upper dead band
0,0          !  Lower dead band
*** INITIAL INPUT VALUES     
20 0 0 0 2.0 1.0     
     
EQUATIONS 3     
BoWinTilt3 = [39,1]     ! Boolean indicating that ambient temp. is 2 K below room (hysteresis 1 K)
BoWinTilt = BoWinTilt1*BoWinTilt2*BoWinTilt3*GT(Tamb24,12)     ! Combined boolean values for window tilt (open) for increased air-exchange (without heat recovery)
a_WIN = 10*BoWinTilt     ! aperture angle of windows, �
     
UNIT 40   TYPE 358     ! Tilted Window Infiltration (based on A. and R. Weber, EMPA)
PARAMETERS 4     
1     ! 1  Mode (not used)
1     ! 2  number windows (max. 20)
1     ! 3  height windows  1 [m]
1     ! 4  width  windows  1 [m]
     
INPUTS 3     
Tamb     !  1    ambient temperature         
Troom     !  2    room temperature window 1  [�C]   
a_WIN      !  3    aperture angle   window 1  [�]                 
**   INPUT INITIAL VALUES     
**    1    2    3    4    5    6    7     
 0    20   10      
**-----------------------------------------     
**  Out 1: Flow rate window 1 [m3/h]     
**  Out 2: Flow rate window 2 [m3/h]     
**  Out 3: Flow rate window 3 [m3/h] etc..     
**     
EQUATIONS 3     
V_inf_win = 6*[40,1]     ! Combined natural air flow rate through all 6 windows
i_inf_win = V_inf_win/Vbui     ! air change rate through windows relative to building air volume [1/h]
i_inf = i_inf_win + 0.4     ! total air change rate: 0.4 is added if not passive house
   

EQUATIONS 1     
Alpha_ext = 3.6*(4*vWind+4)     ! Building outside heat transfer coefficient (kJ/hm2K)
     
UNIT 56 TYPE 56
PARAMETERS 3
unitAssignBuilding
1
0.5
INPUTS 37
Tamb
RHamb_100
Tsky
Tamb
AISZ
AISA
IT_N      
IT_S
IT_E      
IT_W      
IT_surfUser_1 !IT_S60
IT_surfUser_3 !IT_N20
IB_N      
IB_S
IB_E      
IB_W      
IB_surfUser_1 !IB_S60
IB_surfUser_3 !IB_N20
AI_N      
AI_S      
AI_E      
AI_W      
AI_surfUser_1 !AI_S60
AI_surfUser_3 !AI_N20
0,0
TIdHeatSet
TIdCoolSet
Npers
PbuiGainEq_Jh
PheatBuiRad_Jh
PheatBuiConv_Jh
i_SHD     
i_Inf
i_vent
T_HRSi    
Alpha_ext
PBuiGrd_Jh

*** INITIAL INPUT VALUES
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 

**  OutNr Label     Unit    ZNr Zone      Surface      OUTPUT DESCRIPTION
**
** |   1 | TAIR_ERDGE                | C          |   1 | ERDGE                |     | air temperature of zone                                                                                           | TAIR   1
** |   2 | QSENS_ERDGE               | kJ/hr      |   1 | ERDGE                |     | sens. energy demand of zone, heating(-),         cooling(+)                                                                                           | QSENS  1
** |   3 | QCSURF_ERDGE              | kJ/hr      |   1 | ERDGE                |     | total convection to air from all surf. inc. int.shading                                                                                           | QCSURF 1
** |   4 | QINF_ERDGE                | kJ/hr      |   1 | ERDGE                |     | sens. infiltration energy gain of zone                                                                                           | QINF   1
** |   5 | QVENT_ERDGE               | kJ/hr      |   1 | ERDGE                |     | sens. ventilation energy gain of zone                                                                                           | QVENT  1
** |   6 | QCOUP_ERDGE               | kJ/hr      |   1 | ERDGE                |     | sens. coupling energy gain of zone                                                                                           | QCOUP  1
** |   7 | QGCONV_ERDGE              | kJ/hr      |   1 | ERDGE                |     | internal convective gains of zone                                                                                           | QGCONV 1
** |   8 | QGRAD_ERDGE               | kJ/hr      |   1 | ERDGE                |     | internal radiative gain                                                                                           | QGRAD  1
** |   9 | RELHUM_ERDGE              | %          |   1 | ERDGE                |     | relativ humidity of zone air                                                                                           | RELHUM 1
** |  10 | QSOLTR_ERDGE              | kJ/hr      |   1 | ERDGE                |     | total s-wave solar radiation through ext. windows of zone (but not kept 100 % in Zone)                                                                                           | QSOLTR 1
** |  11 | TSTAR_ERDGE               | C          |   1 | ERDGE                |     | star node temperature                                                                                           | TSTAR  1
** |  12 | TOP_ERDGE                 | C          |   1 | ERDGE                |     | operative room temperature                                                                                           | TOP    1
** |  13 | QUA_ERDGE                 | kJ/hr      |   1 | ERDGE                |     | UA-transmission losses                                                                                           | QUA    1
** |  14 | QHEAT_ERDGE               | kJ/hr      |   1 | ERDGE                |     | heating demand                                                                                           | QHEAT  1
** |  15 | QCOOL_ERDGE               | kJ/hr      |   1 | ERDGE                |     | cooling demand                                                                                           | QCOOL  1
** |  16 | QTWG_ERDGE                | kJ/hr      |   1 | ERDGE                |     | total wallgains on inside surfaces of zone                                                                                           | QTWG   1
** |  17 | QTSKY_ERDGE               | kJ/hr      |   1 | ERDGE                |     | total rad. to sky of outside surfaces of zone                                                                                           | QTSKY  1
** |  18 | DQAIR_ERDGE               | kJ/hr      |   1 | ERDGE                |     | change int. sens. energy of zone air since start                                                                                           | DQAIR  1
** |  19 | QTSABS_ERDGE              | kJ/hr      |   1 | ERDGE                |     | total solar rad. absorbed at inside surfaces of zone                                                                                           | QTSABS 1
     
EQUATIONS 20
Troom = [56,1]
RHroom = [56,9]
PbuiSurfIns_kW =[56,3]/3600
PbuiInf_kW = [56,4]/3600
PbuiVent_kW = [56,5]/3600
PbuiCoupl_kW = [56,6]/3600
PBuiGainsConv_kW = [56,7]/3600
PBuiGainsRad_kW = [56,8]/3600
Rhbui = [56,9]
PBuiSol_kW = [56,10]/3600
PBuiGains_kW = PBuiGainsConv_kW + PBuiGainsRad_kW
TroomStar = [56,11]
TroomOp = [56,12]
PBuiUAstatic_kW = [56,13]/3600
PBuiHeatDem_kW = [56,14]/3600
PBuiCoolDem_kW = [56,15]/3600
PBuiWallGain_kW = [56,16]/3600
PbuiTsky_kW = [56,17]/3600
PBuiDQair_kW = [56,18]/3600
PBuiSol2_kW = [56,19]/3600
        
CONSTANTS 1
PAcumBui_kW  = 0 ! to be calculated		



EQUATIONS 7     ! penalty calculation for space haeting / cooling according to Task 26 and Task 32
X = 2     ! exponent for penalty calculation
NightPen = GT(MOD(time,24),23)+LT(MOD(time,24),6)   !GT(tDRdhw,23)+LT(tDRdhw,6)
DayPen = Not(NightPen)       
dTsh = MAX(0,19.5-Troom)*DayPen+MAX(0,16-Troom)*NightPen      ! delta-T for room heating not met
PpenSH_kW = UaBui*(dTsh+(dTsh+1)^X-1)/1000.0     ! penalty function for room-temperature below 19.5�C [kW]
dTsc = MAX(0,(Troom-MAX(25,26+(Tamb-29)/3)))     ! delta-T for room cooling not met
PpenSC_kW = UaBui*(dTsc+(dTsc+1)^X-1)/1000.0     ! penalty function for room-temperatures above limits of DIN 1946-2 [kW]
     
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!MONTHLY PRINTER !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

CONSTANTS 1
unitPrinterBui=123

ASSIGN    temp\BUILDING_MO.Prt     unitPrinterBui

UNIT 123 Type 46 ! Printegrator Monthly Values for System
PARAMETERS 6    
unitPrinterBui ! 1: Logical unit number, -
-1             ! 2: Logical unit for monthly summaries, -
1              ! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1             ! 4: Printing & integrating interval, h. -1 for monthly integration
1              ! 5: Number of inputs to avoid integration, -
1              ! 6: Output number to avoid integration
INPUTS 8
$Time  PBuiSol_kW PBuiGains_KW
PBuiUAstatic_kW PbuiInf_kW PbuiVent_kW PAcumBui_kW dTsc
***************
$Time  PBuiSol_kW PBuiGains_KW
PBuiUAstatic_kW PbuiInf_kW PbuiVent_kW PAcumBui_kW dTsc
 
 
*******************************
** hourly printer
*******************************
CONSTANTS 1
unitPrintHouVar = 517

ASSIGN temp\Building_HR.hr      unitPrintHouVar  
UNIT 517 Type 46     ! Printegrator hourly Values for System
PARAMETERS 5    
unitPrintHouVar   ! 1: Logical unit number, -
-1     ! 2: Logical unit for monthly summaries, -
1     ! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
1     ! 4: Printing & integrating interval, h. -1 for monthly integration
0     ! 5: Number of inputs to avoid integration, -
 ! 6: Output number to avoid integration

INPUTS 3
$Time Tamb  Troom
***
$Time Tamb  Troom

*******************************
**END Building.dck
*******************************
